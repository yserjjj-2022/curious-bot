# -*- coding: utf-8 -*-

import os
import time
from services.storage_service import StorageService

def run_test():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ StorageService.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç–∞—Ç—É—Å–∞–º–∏ –∏ –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏.
    """
    print("=== –ó–ê–ü–£–°–ö –¢–ï–°–¢–ê –î–õ–Ø –û–ë–ù–û–í–õ–ï–ù–ù–û–ì–û STORAGE_SERVICE ===")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é —Ç–µ—Å—Ç–æ–≤—É—é –ë–î
    test_db_path = 'data/test_articles.db'
    db_url = f'sqlite:///{test_db_path}'
    
    # --- –®–∞–≥ 0: –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–æ–º ---
    if os.path.exists(test_db_path):
        os.remove(test_db_path)
        print(f"–£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª —Ç–µ—Å—Ç–æ–≤–æ–π –ë–î: {test_db_path}")

    # --- –®–∞–≥ 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
    print("\n[–¢–ï–°–¢ 1] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞...")
    try:
        storage = StorageService(db_url=db_url)
        print("‚úÖ –£–°–ü–ï–•: –°–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, —Ñ–∞–π–ª –ë–î —Å–æ–∑–¥–∞–Ω.")
    except Exception as e:
        print(f"‚ùå –ü–†–û–í–ê–õ: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–∞: {e}")
        return

    # --- –®–∞–≥ 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ 'new' ---
    print("\n[–¢–ï–°–¢ 2] –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏...")
    article_1_meta = {'id': 'W1', 'display_name': 'Article 1'}
    
    was_added = storage.add_article(
        article_meta=article_1_meta,
        content_type='abstract',
        content_url=None,
        original_abstract='Abstract for article 1.',
        source_name='Test Source'
    )
    if not was_added:
        print("‚ùå –ü–†–û–í–ê–õ: –ú–µ—Ç–æ–¥ add_article –≤–µ—Ä–Ω—É–ª False –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ç—å—è —Å–æ—Ö—Ä–∞–Ω–∏–ª–∞—Å—å —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º
    saved_article_1 = storage.get_article_by_id('W1')
    if saved_article_1 and saved_article_1.status == 'new':
        print("‚úÖ –£–°–ü–ï–•: –°—Ç–∞—Ç—å—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'new'.")
    else:
        status = saved_article_1.status if saved_article_1 else 'None'
        print(f"‚ùå –ü–†–û–í–ê–õ: –û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å 'new', –Ω–æ –ø–æ–ª—É—á–µ–Ω '{status}'.")
        return

    # --- –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ ---
    print("\n[–¢–ï–°–¢ 3] –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–π –∂–µ —Å—Ç–∞—Ç—å–∏...")
    was_added_again = storage.add_article(article_1_meta, 'abstract', None, 'Abstract', 'Test')
    if not was_added_again:
        print("‚úÖ –£–°–ü–ï–•: –ó–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ —Å—Ä–∞–±–æ—Ç–∞–ª–∞.")
    else:
        print("‚ùå –ü–†–û–í–ê–õ: –°–µ—Ä–≤–∏—Å –ø–æ–∑–≤–æ–ª–∏–ª –¥–æ–±–∞–≤–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç.")
        return

    # --- –®–∞–≥ 4: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å—Ç–∞—Ç—å–∏ ---
    print("\n[–¢–ï–°–¢ 4] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å—Ç–∞—Ç—å–∏ –Ω–∞ 'awaiting_triage'...")
    update_success = storage.update_article_status('W1', 'awaiting_triage')
    if not update_success:
        print("‚ùå –ü–†–û–í–ê–õ: –ú–µ—Ç–æ–¥ update_article_status –≤–µ—Ä–Ω—É–ª False.")
        return
        
    updated_article_1 = storage.get_article_by_id('W1')
    if updated_article_1 and updated_article_1.status == 'awaiting_triage':
        print("‚úÖ –£–°–ü–ï–•: –°—Ç–∞—Ç—É—Å —Å—Ç–∞—Ç—å–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.")
    else:
        status = updated_article_1.status if updated_article_1 else 'None'
        print(f"‚ùå –ü–†–û–í–ê–õ: –û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å 'awaiting_triage', –Ω–æ –ø–æ–ª—É—á–µ–Ω '{status}'.")
        return

    # --- –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–±–æ—Ä–∫–∏ –ø–æ —Å—Ç–∞—Ç—É—Å—É ---
    print("\n[–¢–ï–°–¢ 5] –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–±–æ—Ä–∫–∏ –ø–æ —Å—Ç–∞—Ç—É—Å—É...")
    # –î–æ–±–∞–≤–ª—è–µ–º –µ—â–µ –æ–¥–Ω—É —Å—Ç–∞—Ç—å—é, –æ–Ω–∞ –±—É–¥–µ—Ç —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'new'
    storage.add_article({'id': 'W2', 'display_name': 'Article 2'}, 'pdf', 'http://a.pdf', 'Abstract 2', 'Test')
    
    new_articles = storage.get_articles_by_status('new', limit=5)
    triage_articles = storage.get_articles_by_status('awaiting_triage', limit=5)

    if len(new_articles) == 1 and new_articles[0].id == 'W2':
        print("‚úÖ –£–°–ü–ï–•: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –Ω–∞–π–¥–µ–Ω–∞ 1 —Å—Ç–∞—Ç—å—è —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'new'.")
    else:
        print(f"‚ùå –ü–†–û–í–ê–õ: –ù–∞–π–¥–µ–Ω–æ {len(new_articles)} —Å—Ç–∞—Ç–µ–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'new', –æ–∂–∏–¥–∞–ª–∞—Å—å 1.")
        return

    if len(triage_articles) == 1 and triage_articles[0].id == 'W1':
        print("‚úÖ –£–°–ü–ï–•: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –Ω–∞–π–¥–µ–Ω–∞ 1 —Å—Ç–∞—Ç—å—è —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'awaiting_triage'.")
    else:
        print(f"‚ùå –ü–†–û–í–ê–õ: –ù–∞–π–¥–µ–Ω–æ {len(triage_articles)} —Å—Ç–∞—Ç–µ–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'awaiting_triage', –æ–∂–∏–¥–∞–ª–∞—Å—å 1.")
        return

    print("\nüéâüéâüéâ –í—Å–µ —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã! –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π StorageService —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. üéâüéâüéâ")

if __name__ == "__main__":
    run_test()
